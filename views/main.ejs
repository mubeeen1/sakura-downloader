<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>🌸 Sakura Downloader - Multi-Platform Media Downloader</title>
    <link rel="icon" href="data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 100 100%22><text y=%22.9em%22 font-size=%2290%22>🌸</text></svg>" />
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700;800&display=swap" rel="stylesheet" />
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
    <style>
        /* Modern color palette with gradient support */
        :root {
            --primary-gradient: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            --secondary-gradient: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
            --accent-gradient: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
            --success-gradient: linear-gradient(135deg, #81FBB8 0%, #28C76F 100%);
            --warning-gradient: linear-gradient(135deg, #FFE066 0%, #FF6B35 100%);
            --danger-gradient: linear-gradient(135deg, #ff6b6b 0%, #ee5a52 100%);
            
            --bg-dark: rgba(26, 32, 44, 0.95);
            --card-bg: rgba(255, 255, 255, 0.1);
            --text-primary: #ffffff;
            --text-secondary: rgba(255, 255, 255, 0.8);
            --border-color: rgba(255, 255, 255, 0.2);
            --shadow-primary: 0 20px 40px rgba(0, 0, 0, 0.3);
            --shadow-hover: 0 30px 60px rgba(0, 0, 0, 0.4);
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Poppins', sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 50%, #f093fb 100%);
            background-size: 400% 400%;
            animation: gradientShift 8s ease infinite;
            color: var(--text-primary);
            min-height: 100vh;
            overflow-x: hidden;
            position: relative;
        }

        @keyframes gradientShift {
            0%, 100% { background-position: 0% 50%; }
            50% { background-position: 100% 50%; }
        }

        /* Floating particles background */
        .particles {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
            z-index: 1;
        }

        .particle {
            position: absolute;
            width: 4px;
            height: 4px;
            background: rgba(255, 255, 255, 0.6);
            border-radius: 50%;
            animation: float linear infinite;
        }

        @keyframes float {
            0% {
                transform: translateY(100vh) translateX(0) rotate(0deg);
                opacity: 0;
            }
            10% {
                opacity: 1;
            }
            90% {
                opacity: 1;
            }
            100% {
                transform: translateY(-100px) translateX(100px) rotate(360deg);
                opacity: 0;
            }
        }

        /* Main container */
        .container {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            min-height: 100vh;
            padding: 2rem;
            position: relative;
            z-index: 10;
        }

        /* Header with enhanced styling */
        .header {
            text-align: center;
            margin-bottom: 3rem;
            animation: fadeInUp 1s ease-out;
        }

        .logo {
            font-size: 4rem;
            margin-bottom: 1rem;
            animation: bounce 2s ease-in-out infinite;
        }

        .title {
            font-size: clamp(2rem, 5vw, 4rem);
            font-weight: 800;
            background: linear-gradient(135deg, #fff 0%, #f0f8ff 100%);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            margin-bottom: 0.5rem;
            text-shadow: 0 4px 20px rgba(255, 255, 255, 0.3);
        }

        .subtitle {
            font-size: 1.2rem;
            font-weight: 300;
            color: var(--text-secondary);
            max-width: 600px;
            margin: 0 auto;
            line-height: 1.6;
        }

        /* Platform grid */
        .platforms-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
            gap: 2rem;
            max-width: 1200px;
            width: 100%;
            margin: 0 auto;
        }

        /* Enhanced platform cards */
        .platform-card {
            position: relative;
            background: var(--card-bg);
            backdrop-filter: blur(20px);
            border: 1px solid var(--border-color);
            border-radius: 24px;
            padding: 2rem;
            text-decoration: none;
            color: var(--text-primary);
            transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
            cursor: pointer;
            overflow: hidden;
            transform: translateY(0);
            animation: fadeInUp 0.6s ease-out;
        }

        .platform-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255,255,255,0.1), transparent);
            transition: left 0.5s ease;
        }

        .platform-card:hover::before {
            left: 100%;
        }

        .platform-card:hover {
            transform: translateY(-10px) scale(1.02);
            box-shadow: var(--shadow-hover);
            border-color: rgba(255, 255, 255, 0.4);
        }

        .platform-icon {
            font-size: 3rem;
            margin-bottom: 1rem;
            display: block;
            text-align: center;
            filter: drop-shadow(0 4px 8px rgba(0,0,0,0.3));
        }

        .platform-name {
            font-size: 1.5rem;
            font-weight: 600;
            text-align: center;
            margin-bottom: 0.5rem;
        }

        .platform-description {
            font-size: 0.9rem;
            color: var(--text-secondary);
            text-align: center;
            line-height: 1.5;
        }

        /* Platform-specific colors */
        .platform-tiktok:hover { box-shadow: 0 20px 40px rgba(255, 0, 80, 0.3); }
        .platform-youtube:hover { box-shadow: 0 20px 40px rgba(255, 0, 0, 0.3); }
        .platform-facebook:hover { box-shadow: 0 20px 40px rgba(24, 119, 242, 0.3); }
        .platform-instagram:hover { box-shadow: 0 20px 40px rgba(225, 48, 108, 0.3); }
        .platform-twitter:hover { box-shadow: 0 20px 40px rgba(29, 161, 242, 0.3); }
        .platform-pinterest:hover { box-shadow: 0 20px 40px rgba(189, 8, 28, 0.3); }

        /* Footer info */
        .footer-info {
            margin-top: 3rem;
            text-align: center;
            color: var(--text-secondary);
            font-size: 0.9rem;
            animation: fadeIn 2s ease-out;
        }

        /* Animations */
        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }

        @keyframes bounce {
            0%, 20%, 50%, 80%, 100% {
                transform: translateY(0);
            }
            40% {
                transform: translateY(-10px);
            }
            60% {
                transform: translateY(-5px);
            }
        }

        /* Responsive design */
        @media (max-width: 768px) {
            .platforms-grid {
                grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
                gap: 1.5rem;
            }
            
            .platform-card {
                padding: 1.5rem;
            }
            
            .container {
                padding: 1rem;
            }
        }

        @media (max-width: 480px) {
            .platforms-grid {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body>
    <!-- Animated particles background -->
    <div class="particles" id="particles"></div>
    
    <div class="container">
        <!-- Header Section -->
        <div class="header">
            <div class="logo">🌸</div>
            <h1 class="title">Sakura Downloader</h1>
            <p class="subtitle">Download media from your favorite platforms with lightning speed and elegant simplicity</p>
        </div>
        
        <!-- Platform Cards Grid -->
        <div class="platforms-grid">
            <a href="/tiktok" class="platform-card platform-tiktok">
                <div class="platform-icon">🎵</div>
                <div class="platform-name">TikTok</div>
                <div class="platform-description">Download viral videos and trending content from TikTok</div>
            </a>
            
            <a href="/youtube" class="platform-card platform-youtube">
                <div class="platform-icon">📺</div>
                <div class="platform-name">YouTube</div>
                <div class="platform-description">Save videos and audio from the world's largest video platform</div>
            </a>
            
            <a href="/instagram" class="platform-card platform-instagram">
                <div class="platform-icon">📸</div>
                <div class="platform-name">Instagram</div>
                <div class="platform-description">Download photos, videos, and stories from Instagram</div>
            </a>
            
            <a href="/facebook" class="platform-card platform-facebook">
                <div class="platform-icon">📘</div>
                <div class="platform-name">Facebook</div>
                <div class="platform-description">Save videos and media from Facebook posts and pages</div>
            </a>
            
            <a href="/twitter" class="platform-card platform-twitter">
                <div class="platform-icon">🐦</div>
                <div class="platform-name">Twitter</div>
                <div class="platform-description">Download videos and GIFs from Twitter tweets</div>
            </a>
            
            <a href="/pinterest" class="platform-card platform-pinterest">
                <div class="platform-icon">📌</div>
                <div class="platform-name">Pinterest</div>
                <div class="platform-description">Save high-quality images and videos from Pinterest</div>
            </a>
            
            <a href="/capcut" class="platform-card">
                <div class="platform-icon">🎬</div>
                <div class="platform-name">CapCut</div>
                <div class="platform-description">Download edited videos from CapCut templates</div>
            </a>
            
            <a href="/gdrive" class="platform-card">
                <div class="platform-icon">☁️</div>
                <div class="platform-name">Google Drive</div>
                <div class="platform-description">Access and download files from Google Drive links</div>
            </a>
            
            <a href="/mediafire" class="platform-card">
                <div class="platform-icon">🔥</div>
                <div class="platform-name">MediaFire</div>
                <div class="platform-description">Download files from MediaFire sharing links</div>
            </a>
        </div>
        
        <!-- Footer Info -->
        <div class="footer-info">
            <p>✨ Fast, secure, and completely free media downloading ✨</p>
            <p>Made with 💜 for content creators and media enthusiasts</p>
        </div>
    </div>
    
    <script>
        // Create floating particles
        function createParticles() {
            const particlesContainer = document.getElementById('particles');
            const particleCount = 50;
            
            for (let i = 0; i < particleCount; i++) {
                const particle = document.createElement('div');
                particle.className = 'particle';
                particle.style.left = Math.random() * 100 + '%';
                particle.style.animationDuration = (Math.random() * 10 + 10) + 's';
                particle.style.animationDelay = Math.random() * 10 + 's';
                particlesContainer.appendChild(particle);
            }
        }
        
        // Initialize particles when page loads
        document.addEventListener('DOMContentLoaded', createParticles);
        
        // Add staggered animation delays to cards
        document.addEventListener('DOMContentLoaded', () => {
            const cards = document.querySelectorAll('.platform-card');
            cards.forEach((card, index) => {
                card.style.animationDelay = (index * 0.1) + 's';
            });
        });
        
        // Add click ripple effect
        document.addEventListener('DOMContentLoaded', () => {
            const cards = document.querySelectorAll('.platform-card');
            cards.forEach(card => {
                card.addEventListener('click', function(e) {
                    const ripple = document.createElement('div');
                    const rect = this.getBoundingClientRect();
                    const size = Math.max(rect.width, rect.height);
                    const x = e.clientX - rect.left - size / 2;
                    const y = e.clientY - rect.top - size / 2;
                    
                    ripple.style.cssText = `
                        position: absolute;
                        width: ${size}px;
                        height: ${size}px;
                        left: ${x}px;
                        top: ${y}px;
                        background: rgba(255,255,255,0.3);
                        border-radius: 50%;
                        transform: scale(0);
                        animation: ripple 0.6s ease-out;
                        pointer-events: none;
                    `;
                    
                    this.appendChild(ripple);
                    
                    setTimeout(() => {
                        ripple.remove();
                    }, 600);
                });
            });
        });
        
        // Add ripple animation CSS
        const style = document.createElement('style');
        style.textContent = `
            @keyframes ripple {
                from {
                    transform: scale(0);
                    opacity: 1;
                }
                to {
                    transform: scale(1);
                    opacity: 0;
                }
            }
        `;
        document.head.appendChild(style);
    </script>
</body>
</html>
